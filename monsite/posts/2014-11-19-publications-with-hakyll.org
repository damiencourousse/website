---
title: generating page contents from org-mode files
---
#+TITLE: generation of html contents from org-mode files

The markdown format is nice, but considering that I use extensively
use [[http://orgmode.org][OrgMode]], I investigated a bit to use org-mode files for generating
the contents of this website.


* Metadata

Org files have their own metadata format.
Metadata are defined inside the file, for example as follows:

#+BEGIN_EXAMPLE
#FILE: mypage.org
#+TITLE: A page title
#+END_EXAMPLE

However, Hakyll-specific metadata or custom metadata for your build
system are not recognised in org files. In this case, it is possible
to [[http://jaspervdj.be/hakyll/tutorials/02-basics.html#pages-and-metadata][create a metadata file]]  that will describe your metadata with the
syntax used by Hakyll:

#+BEGIN_EXAMPLE
#FILE: mypage.org.metadata
---
title: A page title
---
#+END_EXAMPLE

When a metadata file is used, its contents override the metadata
fields described in the org file.


* Example: generation of pages from org-mode files

A simple build rule for Hakyll could be:

#+BEGIN_SRC Haskell
    -- Static pages
    match "pages/*.org" $ do
        route $ gsubRoute "pages/" (const "") `composeRoutes` setExtension "html"
        compile $ do
            pandocCompiler
                >>= loadAndApplyTemplate "templates/default.html" defaultContext
                >>= relativizeUrls
#+END_SRC

* Including bibliographic references

In org-mode files, the biblio reference is included with this format :
=[@hennessy]=.

The output is generated as follows, according to the =csl= file
selected, and to the contents of the bibtex file:

[@hennessy]

** pandoc: usage example
#+BEGIN_EXAMPLE
pandoc -f org -t plain  --bibliography ../assets/bib/main.bib --csl ../assets/csl/jcsl.csl  -s test.org  -o citations.txt
#+END_EXAMPLE


** build rule for Hakyll

I have adapted the Hakyll build system of [[https://github.com/jtanguy/julien.jhome.fr.git][Julien Tanguy]]. As soon as a
bibtex file, and possibly a csl file, are declared in the metadata of
the source file, =bibtexCompiler= is selected.

The Hakyll build rule for org-mode files becomes:
#+BEGIN_SRC Haskell
    -- Static pages
    match ("pages/*.markdown" .||. "pages/*.org") $ do
        route $ gsubRoute "pages/" (const "") `composeRoutes` setExtension "html"
        compile $ do
            item <- getUnderlying
            bibFile <- liftM (fromMaybe "") $ getMetadataField item "biblio"
            cslFile <- liftM (fromMaybe "chicago.csl") $ getMetadataField item "csl"
            let compiler = if bibFile /= "" then
                                bibtexCompiler cslFile bibFile
                           else pandocCompiler
            compiler
                >>= loadAndApplyTemplate "templates/default.html" defaultContext
                >>= relativizeUrls
#+END_SRC

An example of metadata declaration follows:
#+BEGIN_EXAMPLE
#FILE: mypage.org.metadata
title: My org page
biblio: main.bib
csl: jcsl.csl
#+END_EXAMPLE

*** Csl Trick

TODO: describe this.

How to generate bibliographic references from the biblio reference
instead of the biblio citation.
